#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    log                     global
    option                  dontlognull
    option http-server-close
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------


#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------


#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------

listen mysql-cluster
	bind 0.0.0.0:3306
	mode tcp
	balance  roundrobin
	option tcpka
	option mysql-check user haproxy	
	server infra1 172.29.236.151:3306
#	server infra2 172.29.236.161:3306
	
listen keystone_admin_cluster
	bind 0.0.0.0:35357
	mode http
	balance  source
	option  forwardfor
	option  httpchk
	option  httplog
	server infra1 172.29.236.24:35357 check 
	server infra2 172.29.236.80:35357 check 
 
listen keystone_public_internal_cluster
	bind 0.0.0.0:5000
	mode http
	balance  source
	option  forwardfor
	option  httpchk
	option  httplog
	server infra1 172.29.236.24:5000 check 
	server infra2 172.29.236.80:5000 check 

listen glance_api_cluster
	bind 0.0.0.0:9292
	mode http
	balance  roundrobin
	option  forwardfor
	option  httpchk
	option  httplog
	server infra1 172.29.236.183:9292 check 
	server infra2 172.29.236.56:9292 check 
	
listen glance_registry_cluster
	bind 0.0.0.0:9191
	mode http
	balance  roundrobin
	server infra1 172.29.236.183:9191 check 
	server infra2 172.29.236.56:9191 check 

listen heat_cfn_cluster
    	bind 0.0.0.0:8000
    	mode http
    	balance  roundrobin
    	option forwardfor
    	option  httpchk
    	option  httplog
    	server infra1 172.29.236.25:8000 check 
    	server infra2 172.29.236.85:8000 check 
	
listen heat_api_cluster
    	bind 0.0.0.0:8004
    	mode http
    	balance  roundrobin
    	option  forwardfor
    	option  httpchk
    	option  httplog
    	server infra1 172.29.236.50:8004 check 
    	server infra2 172.29.236.202:8004 check 

listen nova_metadata_api_cluster
	bind 0.0.0.0:8775
	mode http
        balance  roundrobin
	option  httpchk
	option  httplog
	server infra1 172.29.236.46:8775 check 
	server infra2 172.29.236.241:8775 check 

listen nova_compute_api_cluster
	bind 0.0.0.0:8774
	mode http
        balance  roundrobin
	option  forwardfor
	option  httpchk
	option  httplog
	server infra1 172.29.236.240:8774 check 
	server infra2 172.29.236.164:8774 check 
 
listen neutron_cluster
	bind 0.0.0.0:9696
	mode http
    	balance  roundrobin
	option  forwardfor
	option  httpchk
	option  httplog
	server network1 172.29.236.62:9696 check 

listen horizon_cluster
    	bind 0.0.0.0:80
    	mode http
    	balance  roundrobin
    	option  forwardfor
    	option  httpchk
    	option  httplog
    	server infra1 172.29.236.76:80 check 
    	server infra2 172.29.236.53:80 check 

listen horizon_cluster_ssl
    	bind 0.0.0.0:443
    	mode tcp
    	balance  source
    	option  ssl-hello-chk
    	server infra1 172.29.236.76:443 check 
    	server infra2 172.29.236.53:443 check

listen memcached
    	bind 0.0.0.0:11211
    	mode tcp
    	balance  source
    	server infra1 172.29.236.199:11211 check
	server infra2 172.29.236.140:11211 check    

listen elasticsearch
    	bind 0.0.0.0:9200
    	mode tcp
    	balance  source
    	server logger1 172.29.236.148:9200 check
    
listen kibana
    	bind 0.0.0.0:8080
    	mode http
    	balance  source
    	option  forwardfor
    	option  httpchk
    	option  httplog
    	server logger1 172.29.236.195:8080 check    

listen kibana_ssl
    	bind 0.0.0.0:8443
    	mode tcp
    	balance  source
    	option	ssl-hello-chk
    	server logger1 172.29.236.195:8443 check
    

listen stats 0.0.0.0:9000       #Listen on all IP's on port 9000
    mode http
    balance
    timeout client 5000
    timeout connect 4000
    timeout server 30000

    #This is the virtual URL to access the stats page
    stats uri /haproxy_stats        

    #Authentication realm. This can be set to anything. Escape space characters with a backslash.
    stats realm HAProxy\ Statistics 

    #The user/pass you want to use. Change this password!
    stats auth admin:passwd   

    #This allows you to take down and bring up back end servers.
    #This will produce an error on older versions of HAProxy.
    stats admin if TRUE
